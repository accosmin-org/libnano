make_app(info NANO::nano)
make_app(info_dataset NANO::nano)
make_app(bench_eigen NANO::nano)
make_app(bench_tpool NANO::nano)
make_app(bench_solver NANO::nano)
make_app(bench_function NANO::nano)

find_package(OpenMP QUIET)
if(OPENMP_FOUND)
    message(STATUS "Building thread pool benchmark with OpenMP support")
    target_link_libraries(bench_tpool PRIVATE OpenMP::OpenMP_CXX)
else()
    message(WARNING "Cannot find OpenMP")
endif()

if(APPLE)
    # todo: find a better way to properly use Qt5 installed with brew
    find_package(Qt5 5.6 COMPONENTS Core Widgets QUIET)
    if(NOT Qt5_FOUND)
        set(Qt5_DIR "/usr/local/opt/qt/lib/cmake/Qt5")
    endif()
endif()
find_package(Qt5 5.6 COMPONENTS Core Widgets QUIET)
if(Qt5_FOUND)
    message(STATUS "Building Qt5-based interface")
    set(CMAKE_AUTOMOC ON)
    set(CMAKE_AUTORCC ON)
    set(CMAKE_AUTOUIC ON)

    if(CMAKE_VERSION VERSION_LESS "3.7.0")
        set(CMAKE_INCLUDE_CURRENT_DIR ON)
    endif()

    add_executable(LibNano qt5ui.cpp qt5mainwindow.cpp)

    target_compile_configure(LibNano)
    target_include_directories(LibNano PRIVATE $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>)
    target_link_libraries(LibNano PRIVATE NANO::nano Qt5::Widgets)
    install(TARGETS LibNano RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
else()
    message(WARNING "Cannot find Qt5")
endif()
