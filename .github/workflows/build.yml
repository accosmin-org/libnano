name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: debug (gcc)
      run: |
        bash scripts/setup_ubuntu2204.sh --default
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Debug --config --build --test --install --build-example

    - name: release (gcc)
      run: |
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Release --config --build --test --install --build-example

    - name: debug (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --build-type Debug --libcpp --config --build --test --install --build-example

    - name: ASAN (gcc)
      run: |
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Debug --asan --config --build --test

    - name: LSAN (gcc)
      run: |
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Debug --lsan --config --build --test

    - name: USAN (gcc)
      run: |
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Debug --usan --config --build --test

    - name: TSAN (gcc)
      run: |
        CXX=g++ bash scripts/build.sh --generator Ninja --build-type Debug --tsan --config --build --test

    - name: clang-tidy-cert (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-cert

    - name: clang-tidy-hicpp (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-hicpp

    - name: clang-tidy-misc (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-misc

    - name: clang-tidy-bugprone (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-bugprone

    - name: clang-tidy-modernize (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-modernize

    - name: clang-tidy-performance (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-performance

    - name: clang-tidy-portability (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-portability

    - name: clang-tidy-readability (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-readability

    - name: clang-tidy-clang-analyzer (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-clang-analyzer

    - name: clang-tidy-cppcoreguidelines (clang)
      run: |
        CXX=clang++ bash scripts/build.sh --generator Ninja --config --build --clang-tidy-cppcoreguidelines

  cppcheck:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: setup
      run: bash scripts/setup_ubuntu2204.sh --default
    - name: cppcheck
      run: CXX=g++ bash scripts/build.sh --generator Ninja --config --cppcheck

  memcheck:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: setup
      run: bash scripts/setup_ubuntu2204.sh --default
    - name: memcheck
      run: CXX=g++ bash scripts/build.sh --generator Ninja --build-type RelWithDebInfo --config --build --memcheck

  coverage:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
    - name: setup
      run: bash scripts/setup_ubuntu2204.sh --default
    - name: codecov
      run: |
        sudo -H pip install --upgrade pip
        sudo -H pip install coverage
        CXX=g++ GCOV=gcov bash scripts/build.sh --generator Ninja --build-type RelWithDebInfo --coverage --config --build --test --codecov
